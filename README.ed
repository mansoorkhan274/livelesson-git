
- 'git init': initialize current folder as a git respository
- 'git clone <URL>' : brings the git repo from <URL> to current folder
- 'git status': tells us what we need to know about our respository

- 'git add <FILE>' : adds <FILE> to the stagging area
- 'git commit': open a text editor to write commit message 
 	- 'git commit -m "MESSAGE"': writes MESSAGE as a commit without a text editor
- 'git log': shows the logs (history) of our commits.
	- 'git log --oneline': shows the shorter oneline commit

- 'git log': shows the log (history) of our commits
	- 'git log --oneline' : shows the shorter oneline commit

- 'git diff': comapre current uncommited state with last known git state
	-'git diff --staged': runs git diff between the stagging area and last known state 
- 'git diff HEAD~<NUMBER>': comapre HEAD with commit <NUMBER> ago (relative)
- 'git diff <HASH>': comapres HEAD with the commit in <HASH>

- 'git restore --source <HASH OR HEAD~> <FILE>' : restore file to <HASH OR HEAD~>
	- 'git checkout <HASH OR HEAD~> <FILE>' : restores file to <HASH OR HEAD>
		- 'git checkout <HASH OR HEAD~>': if you forgot the file, you end up in detach
		- 'git checkout main ': go back to main
		- 'git switch main': go back to main

